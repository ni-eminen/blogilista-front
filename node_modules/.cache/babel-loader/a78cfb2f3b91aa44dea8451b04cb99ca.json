{"ast":null,"code":"var _jsxFileName = \"/home/matias/codeprojects/fstack/blogilista-front/src/components/CreateNewBlogWindow.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport blogService from '../services/blogs';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CreateNewBlogWindow = ({\n  addBlog\n}) => {\n  _s();\n\n  const [title, setTitle] = useState('');\n  const [url, setUrl] = useState('');\n  const [author, setAuthor] = useState('');\n\n  const handleNewBlog = async e => {\n    e.preventDefault();\n    let newBlog = {\n      title: title,\n      url: url,\n      author: author\n    };\n    console.log('posting blog:', newBlog);\n    const response = await blogService.postNewBlog(newBlog);\n    setTitle('');\n    setUrl('');\n    setAuthor('');\n    addBlog(newBlog);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"create new\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"createNewBlogForm\",\n      onSubmit: handleNewBlog,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"blogTitleInput\",\n          type: \"text\",\n          value: title,\n          onChange: ({\n            target\n          }) => setTitle(target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"author:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"blogAuthorInput\",\n          type: \"text\",\n          value: author,\n          onChange: ({\n            target\n          }) => setAuthor(target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"url:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"blogUrlInput\",\n          type: \"text\",\n          value: url,\n          onChange: ({\n            target\n          }) => setUrl(target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CreateNewBlogWindow, \"BmxPEKrRQpBvBiXQlJiVTyOw0q4=\");\n\n_c = CreateNewBlogWindow;\nCreateNewBlogWindow.propTypes = {\n  addBlog: PropTypes.func.isRequired\n};\nexport default CreateNewBlogWindow;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateNewBlogWindow\");","map":{"version":3,"sources":["/home/matias/codeprojects/fstack/blogilista-front/src/components/CreateNewBlogWindow.js"],"names":["React","useState","blogService","PropTypes","CreateNewBlogWindow","addBlog","title","setTitle","url","setUrl","author","setAuthor","handleNewBlog","e","preventDefault","newBlog","console","log","response","postNewBlog","target","value","propTypes","func","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;AAEA,MAAMC,mBAAmB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AACzC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,GAAD,EAAMC,MAAN,IAAgBR,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMW,aAAa,GAAG,MAAOC,CAAP,IAAa;AAC/BA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIC,OAAO,GAAG;AAAET,MAAAA,KAAK,EAAEA,KAAT;AAAgBE,MAAAA,GAAG,EAAEA,GAArB;AAA0BE,MAAAA,MAAM,EAAEA;AAAlC,KAAd;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,OAA7B;AACA,UAAMG,QAAQ,GAAG,MAAMhB,WAAW,CAACiB,WAAZ,CAAwBJ,OAAxB,CAAvB;AACAR,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,IAAAA,MAAM,CAAC,EAAD,CAAN;AACAE,IAAAA,SAAS,CAAC,EAAD,CAAT;AACAN,IAAAA,OAAO,CAACU,OAAD,CAAP;AACH,GATD;;AAWA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,EAAE,EAAC,mBAAT;AAA6B,MAAA,QAAQ,EAAEH,aAAvC;AAAA,8BACI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,EAAE,EAAC,gBAAV;AAA2B,UAAA,IAAI,EAAC,MAAhC;AAAuC,UAAA,KAAK,EAAEN,KAA9C;AAAqD,UAAA,QAAQ,EAAE,CAAC;AAAEc,YAAAA;AAAF,WAAD,KAAgBb,QAAQ,CAACa,MAAM,CAACC,KAAR;AAAvF;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,EAAE,EAAC,iBAAV;AAA4B,UAAA,IAAI,EAAC,MAAjC;AAAwC,UAAA,KAAK,EAAEX,MAA/C;AAAuD,UAAA,QAAQ,EAAE,CAAC;AAAEU,YAAAA;AAAF,WAAD,KAAgBT,SAAS,CAACS,MAAM,CAACC,KAAR;AAA1F;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eASI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,EAAE,EAAC,cAAV;AAAyB,UAAA,IAAI,EAAC,MAA9B;AAAqC,UAAA,KAAK,EAAEb,GAA5C;AAAiD,UAAA,QAAQ,EAAE,CAAC;AAAEY,YAAAA;AAAF,WAAD,KAAgBX,MAAM,CAACW,MAAM,CAACC,KAAR;AAAjF;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ,eAaI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAoBH,CApCD;;GAAMjB,mB;;KAAAA,mB;AAsCNA,mBAAmB,CAACkB,SAApB,GAAgC;AAC5BjB,EAAAA,OAAO,EAAEF,SAAS,CAACoB,IAAV,CAAeC;AADI,CAAhC;AAIA,eAAepB,mBAAf","sourcesContent":["import React, { useState } from 'react'\nimport blogService from '../services/blogs'\nimport PropTypes from 'prop-types'\n\nconst CreateNewBlogWindow = ({ addBlog }) => {\n    const [title, setTitle] = useState('')\n    const [url, setUrl] = useState('')\n    const [author, setAuthor] = useState('')\n\n    const handleNewBlog = async (e) => {\n        e.preventDefault()\n        let newBlog = { title: title, url: url, author: author }\n        console.log('posting blog:', newBlog)\n        const response = await blogService.postNewBlog(newBlog)\n        setTitle('')\n        setUrl('')\n        setAuthor('')\n        addBlog(newBlog)\n    }\n\n    return (\n        <>\n            <h2>create new</h2>\n            <form id='createNewBlogForm' onSubmit={handleNewBlog}>\n                <div>\n                    <label>title:</label>\n                    <input id='blogTitleInput' type='text' value={title} onChange={({ target }) => setTitle(target.value)}></input>\n                </div>\n                <div>\n                    <label>author:</label>\n                    <input id='blogAuthorInput' type='text' value={author} onChange={({ target }) => setAuthor(target.value)}></input>\n                </div>\n                <div>\n                    <label>url:</label>\n                    <input id='blogUrlInput' type='text' value={url} onChange={({ target }) => setUrl(target.value)}></input>\n                </div>\n                <button type='submit'>submit</button>\n            </form>\n        </>\n    )\n}\n\nCreateNewBlogWindow.propTypes = {\n    addBlog: PropTypes.func.isRequired\n}\n\nexport default CreateNewBlogWindow"]},"metadata":{},"sourceType":"module"}