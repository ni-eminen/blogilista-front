{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.navigationKey = navigationKey;\n\nvar _dom = require(\"@testing-library/dom\");\n\nvar _utils = require(\"../utils\");\n\nconst keys = {\n  ArrowLeft: {\n    keyCode: 37\n  },\n  ArrowRight: {\n    keyCode: 39\n  }\n};\n\nfunction getSelectionRange(currentElement, key) {\n  const {\n    selectionStart,\n    selectionEnd\n  } = currentElement();\n  const cursorChange = Number(key in keys) * (key === 'ArrowLeft' ? -1 : 1);\n  return {\n    selectionStart: selectionStart + cursorChange,\n    selectionEnd: selectionEnd + cursorChange\n  };\n}\n\nfunction navigationKey(key) {\n  const event = {\n    key,\n    keyCode: keys[key].keyCode,\n    which: keys[key].keyCode\n  };\n  return ({\n    currentElement,\n    eventOverrides\n  }) => {\n    _dom.fireEvent.keyDown(currentElement(), { ...event,\n      ...eventOverrides\n    });\n\n    const range = getSelectionRange(currentElement, key);\n    (0, _utils.setSelectionRangeIfNecessary)(currentElement(), range.selectionStart, range.selectionEnd);\n\n    _dom.fireEvent.keyUp(currentElement(), { ...event,\n      ...eventOverrides\n    });\n  };\n}","map":{"version":3,"sources":["/home/matias/codeprojects/fstack/blogilista-front/node_modules/@testing-library/user-event/dist/keys/navigation-key.js"],"names":["Object","defineProperty","exports","value","navigationKey","_dom","require","_utils","keys","ArrowLeft","keyCode","ArrowRight","getSelectionRange","currentElement","key","selectionStart","selectionEnd","cursorChange","Number","event","which","eventOverrides","fireEvent","keyDown","range","setSelectionRangeIfNecessary","keyUp"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,aAAR,GAAwBA,aAAxB;;AAEA,IAAIC,IAAI,GAAGC,OAAO,CAAC,sBAAD,CAAlB;;AAEA,IAAIC,MAAM,GAAGD,OAAO,CAAC,UAAD,CAApB;;AAEA,MAAME,IAAI,GAAG;AACXC,EAAAA,SAAS,EAAE;AACTC,IAAAA,OAAO,EAAE;AADA,GADA;AAIXC,EAAAA,UAAU,EAAE;AACVD,IAAAA,OAAO,EAAE;AADC;AAJD,CAAb;;AASA,SAASE,iBAAT,CAA2BC,cAA3B,EAA2CC,GAA3C,EAAgD;AAC9C,QAAM;AACJC,IAAAA,cADI;AAEJC,IAAAA;AAFI,MAGFH,cAAc,EAHlB;AAIA,QAAMI,YAAY,GAAGC,MAAM,CAACJ,GAAG,IAAIN,IAAR,CAAN,IAAuBM,GAAG,KAAK,WAAR,GAAsB,CAAC,CAAvB,GAA2B,CAAlD,CAArB;AACA,SAAO;AACLC,IAAAA,cAAc,EAAEA,cAAc,GAAGE,YAD5B;AAELD,IAAAA,YAAY,EAAEA,YAAY,GAAGC;AAFxB,GAAP;AAID;;AAED,SAASb,aAAT,CAAuBU,GAAvB,EAA4B;AAC1B,QAAMK,KAAK,GAAG;AACZL,IAAAA,GADY;AAEZJ,IAAAA,OAAO,EAAEF,IAAI,CAACM,GAAD,CAAJ,CAAUJ,OAFP;AAGZU,IAAAA,KAAK,EAAEZ,IAAI,CAACM,GAAD,CAAJ,CAAUJ;AAHL,GAAd;AAKA,SAAO,CAAC;AACNG,IAAAA,cADM;AAENQ,IAAAA;AAFM,GAAD,KAGD;AACJhB,IAAAA,IAAI,CAACiB,SAAL,CAAeC,OAAf,CAAuBV,cAAc,EAArC,EAAyC,EAAE,GAAGM,KAAL;AACvC,SAAGE;AADoC,KAAzC;;AAIA,UAAMG,KAAK,GAAGZ,iBAAiB,CAACC,cAAD,EAAiBC,GAAjB,CAA/B;AACA,KAAC,GAAGP,MAAM,CAACkB,4BAAX,EAAyCZ,cAAc,EAAvD,EAA2DW,KAAK,CAACT,cAAjE,EAAiFS,KAAK,CAACR,YAAvF;;AAEAX,IAAAA,IAAI,CAACiB,SAAL,CAAeI,KAAf,CAAqBb,cAAc,EAAnC,EAAuC,EAAE,GAAGM,KAAL;AACrC,SAAGE;AADkC,KAAvC;AAGD,GAdD;AAeD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.navigationKey = navigationKey;\n\nvar _dom = require(\"@testing-library/dom\");\n\nvar _utils = require(\"../utils\");\n\nconst keys = {\n  ArrowLeft: {\n    keyCode: 37\n  },\n  ArrowRight: {\n    keyCode: 39\n  }\n};\n\nfunction getSelectionRange(currentElement, key) {\n  const {\n    selectionStart,\n    selectionEnd\n  } = currentElement();\n  const cursorChange = Number(key in keys) * (key === 'ArrowLeft' ? -1 : 1);\n  return {\n    selectionStart: selectionStart + cursorChange,\n    selectionEnd: selectionEnd + cursorChange\n  };\n}\n\nfunction navigationKey(key) {\n  const event = {\n    key,\n    keyCode: keys[key].keyCode,\n    which: keys[key].keyCode\n  };\n  return ({\n    currentElement,\n    eventOverrides\n  }) => {\n    _dom.fireEvent.keyDown(currentElement(), { ...event,\n      ...eventOverrides\n    });\n\n    const range = getSelectionRange(currentElement, key);\n    (0, _utils.setSelectionRangeIfNecessary)(currentElement(), range.selectionStart, range.selectionEnd);\n\n    _dom.fireEvent.keyUp(currentElement(), { ...event,\n      ...eventOverrides\n    });\n  };\n}"]},"metadata":{},"sourceType":"script"}